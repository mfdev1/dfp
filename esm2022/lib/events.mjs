export class Event {
    constructor(event) {
        Object.assign(this, event);
    }
}
export class ImpressionViewableEvent extends Event {
}
export class RewardedSlotClosedEvent extends Event {
}
export class RewardedSlotGrantedEvent extends Event {
}
export class RewardedSlotReadyEvent extends Event {
}
export class SlotOnloadEvent extends Event {
}
export class SlotRenderEndedEvent extends Event {
}
export class SlotRequestedEvent extends Event {
}
export class SlotResponseReceived extends Event {
}
export class SlotVisibilityChangedEvent extends Event {
}
export const EVENT_TYPES = [
    'impressionViewable',
    'rewardedSlotClosed',
    'rewardedSlotGranted',
    'rewardedSlotReady',
    'slotRequested',
    'slotResponseReceived',
    'slotRenderEnded',
    'slotOnload',
    'slotVisibilityChanged',
];
export function eventFactory(type, event) {
    switch (type) {
        case 'impressionViewable':
            return new ImpressionViewableEvent(event);
        case 'rewardedSlotClosed':
            return new RewardedSlotClosedEvent(event);
        case 'rewardedSlotGranted':
            return new RewardedSlotGrantedEvent(event);
        case 'rewardedSlotReady':
            return new RewardedSlotReadyEvent(event);
        case 'slotRequested':
            return new SlotRequestedEvent(event);
        case 'slotResponseReceived':
            return new SlotResponseReceived(event);
        case 'slotRenderEnded':
            return new SlotRenderEndedEvent(event);
        case 'slotOnload':
            return new SlotOnloadEvent(event);
        case 'slotVisibilityChanged':
            return new SlotVisibilityChangedEvent(event);
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXZlbnRzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2xpYi9ldmVudHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTSxPQUFPLEtBQUs7SUFHaEIsWUFBWSxLQUE2QjtRQUN2QyxNQUFNLENBQUMsTUFBTSxDQUFDLElBQUksRUFBRSxLQUFLLENBQUMsQ0FBQztJQUM3QixDQUFDO0NBQ0Y7QUFFRCxNQUFNLE9BQU8sdUJBQXdCLFNBQVEsS0FBSztDQUFHO0FBRXJELE1BQU0sT0FBTyx1QkFBd0IsU0FBUSxLQUFLO0NBQUc7QUFFckQsTUFBTSxPQUFPLHdCQUNYLFNBQVEsS0FBSztDQUlkO0FBRUQsTUFBTSxPQUFPLHNCQUNYLFNBQVEsS0FBSztDQUlkO0FBRUQsTUFBTSxPQUFPLGVBQWdCLFNBQVEsS0FBSztDQUFHO0FBRTdDLE1BQU0sT0FBTyxvQkFDWCxTQUFRLEtBQUs7Q0FpQmQ7QUFFRCxNQUFNLE9BQU8sa0JBQW1CLFNBQVEsS0FBSztDQUFHO0FBRWhELE1BQU0sT0FBTyxvQkFBcUIsU0FBUSxLQUFLO0NBQUc7QUFFbEQsTUFBTSxPQUFPLDBCQUNYLFNBQVEsS0FBSztDQUlkO0FBRUQsTUFBTSxDQUFDLE1BQU0sV0FBVyxHQUErQztJQUNyRSxvQkFBb0I7SUFDcEIsb0JBQW9CO0lBQ3BCLHFCQUFxQjtJQUNyQixtQkFBbUI7SUFDbkIsZUFBZTtJQUNmLHNCQUFzQjtJQUN0QixpQkFBaUI7SUFDakIsWUFBWTtJQUNaLHVCQUF1QjtDQUN4QixDQUFDO0FBRUYsTUFBTSxVQUFVLFlBQVksQ0FDMUIsSUFBeUMsRUFDekMsS0FBNkI7SUFFN0IsUUFBUSxJQUFJLEVBQUU7UUFDWixLQUFLLG9CQUFvQjtZQUN2QixPQUFPLElBQUksdUJBQXVCLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDNUMsS0FBSyxvQkFBb0I7WUFDdkIsT0FBTyxJQUFJLHVCQUF1QixDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQzVDLEtBQUsscUJBQXFCO1lBQ3hCLE9BQU8sSUFBSSx3QkFBd0IsQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUM3QyxLQUFLLG1CQUFtQjtZQUN0QixPQUFPLElBQUksc0JBQXNCLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDM0MsS0FBSyxlQUFlO1lBQ2xCLE9BQU8sSUFBSSxrQkFBa0IsQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUN2QyxLQUFLLHNCQUFzQjtZQUN6QixPQUFPLElBQUksb0JBQW9CLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDekMsS0FBSyxpQkFBaUI7WUFDcEIsT0FBTyxJQUFJLG9CQUFvQixDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ3pDLEtBQUssWUFBWTtZQUNmLE9BQU8sSUFBSSxlQUFlLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDcEMsS0FBSyx1QkFBdUI7WUFDMUIsT0FBTyxJQUFJLDBCQUEwQixDQUFDLEtBQUssQ0FBQyxDQUFDO0tBQ2hEO0FBQ0gsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjbGFzcyBFdmVudCBpbXBsZW1lbnRzIGdvb2dsZXRhZy5ldmVudHMuRXZlbnQge1xuICBzZXJ2aWNlTmFtZSE6IHN0cmluZztcbiAgc2xvdCE6IGdvb2dsZXRhZy5TbG90O1xuICBjb25zdHJ1Y3RvcihldmVudDogZ29vZ2xldGFnLmV2ZW50cy5FdmVudCkge1xuICAgIE9iamVjdC5hc3NpZ24odGhpcywgZXZlbnQpO1xuICB9XG59XG5cbmV4cG9ydCBjbGFzcyBJbXByZXNzaW9uVmlld2FibGVFdmVudCBleHRlbmRzIEV2ZW50IHt9XG5cbmV4cG9ydCBjbGFzcyBSZXdhcmRlZFNsb3RDbG9zZWRFdmVudCBleHRlbmRzIEV2ZW50IHt9XG5cbmV4cG9ydCBjbGFzcyBSZXdhcmRlZFNsb3RHcmFudGVkRXZlbnRcbiAgZXh0ZW5kcyBFdmVudFxuICBpbXBsZW1lbnRzIGdvb2dsZXRhZy5ldmVudHMuUmV3YXJkZWRTbG90R3JhbnRlZEV2ZW50XG57XG4gIHBheWxvYWQhOiBnb29nbGV0YWcuUmV3YXJkZWRQYXlsb2FkIHwgbnVsbDtcbn1cblxuZXhwb3J0IGNsYXNzIFJld2FyZGVkU2xvdFJlYWR5RXZlbnRcbiAgZXh0ZW5kcyBFdmVudFxuICBpbXBsZW1lbnRzIGdvb2dsZXRhZy5ldmVudHMuUmV3YXJkZWRTbG90UmVhZHlFdmVudFxue1xuICBtYWtlUmV3YXJkZWRWaXNpYmxlITogKCkgPT4gdm9pZDtcbn1cblxuZXhwb3J0IGNsYXNzIFNsb3RPbmxvYWRFdmVudCBleHRlbmRzIEV2ZW50IHt9XG5cbmV4cG9ydCBjbGFzcyBTbG90UmVuZGVyRW5kZWRFdmVudFxuICBleHRlbmRzIEV2ZW50XG4gIGltcGxlbWVudHMgZ29vZ2xldGFnLmV2ZW50cy5TbG90UmVuZGVyRW5kZWRFdmVudFxue1xuICBjb21wYW55SWRzITogbnVtYmVyW10gfCBudWxsO1xuICBjcmVhdGl2ZVRlbXBsYXRlSWQhOiBudW1iZXIgfCBudWxsO1xuICBpc0JhY2tmaWxsITogYm9vbGVhbjtcbiAgbGFiZWxJZHMhOiBudW1iZXJbXSB8IG51bGw7XG4gIHNsb3RDb250ZW50Q2hhbmdlZCE6IGJvb2xlYW47XG4gIHlpZWxkR3JvdXBJZHMhOiBudW1iZXJbXSB8IG51bGw7XG4gIGFkdmVydGlzZXJJZCE6IG51bWJlciB8IG51bGw7XG4gIGNhbXBhaWduSWQhOiBudW1iZXIgfCBudWxsO1xuICBjcmVhdGl2ZUlkITogbnVtYmVyIHwgbnVsbDtcbiAgaXNFbXB0eSE6IGJvb2xlYW47XG4gIGxpbmVJdGVtSWQhOiBudW1iZXIgfCBudWxsO1xuICBzaXplITogc3RyaW5nIHwgbnVtYmVyW10gfCBudWxsO1xuICBzb3VyY2VBZ25vc3RpY0NyZWF0aXZlSWQhOiBudW1iZXIgfCBudWxsO1xuICBzb3VyY2VBZ25vc3RpY0xpbmVJdGVtSWQhOiBudW1iZXIgfCBudWxsO1xufVxuXG5leHBvcnQgY2xhc3MgU2xvdFJlcXVlc3RlZEV2ZW50IGV4dGVuZHMgRXZlbnQge31cblxuZXhwb3J0IGNsYXNzIFNsb3RSZXNwb25zZVJlY2VpdmVkIGV4dGVuZHMgRXZlbnQge31cblxuZXhwb3J0IGNsYXNzIFNsb3RWaXNpYmlsaXR5Q2hhbmdlZEV2ZW50XG4gIGV4dGVuZHMgRXZlbnRcbiAgaW1wbGVtZW50cyBnb29nbGV0YWcuZXZlbnRzLlNsb3RWaXNpYmlsaXR5Q2hhbmdlZEV2ZW50XG57XG4gIGluVmlld1BlcmNlbnRhZ2UhOiBudW1iZXI7XG59XG5cbmV4cG9ydCBjb25zdCBFVkVOVF9UWVBFUzogQXJyYXk8a2V5b2YgZ29vZ2xldGFnLmV2ZW50cy5FdmVudFR5cGVNYXA+ID0gW1xuICAnaW1wcmVzc2lvblZpZXdhYmxlJyxcbiAgJ3Jld2FyZGVkU2xvdENsb3NlZCcsXG4gICdyZXdhcmRlZFNsb3RHcmFudGVkJyxcbiAgJ3Jld2FyZGVkU2xvdFJlYWR5JyxcbiAgJ3Nsb3RSZXF1ZXN0ZWQnLFxuICAnc2xvdFJlc3BvbnNlUmVjZWl2ZWQnLFxuICAnc2xvdFJlbmRlckVuZGVkJyxcbiAgJ3Nsb3RPbmxvYWQnLFxuICAnc2xvdFZpc2liaWxpdHlDaGFuZ2VkJyxcbl07XG5cbmV4cG9ydCBmdW5jdGlvbiBldmVudEZhY3RvcnkoXG4gIHR5cGU6IGtleW9mIGdvb2dsZXRhZy5ldmVudHMuRXZlbnRUeXBlTWFwLFxuICBldmVudDogZ29vZ2xldGFnLmV2ZW50cy5FdmVudCxcbik6IEV2ZW50IHtcbiAgc3dpdGNoICh0eXBlKSB7XG4gICAgY2FzZSAnaW1wcmVzc2lvblZpZXdhYmxlJzpcbiAgICAgIHJldHVybiBuZXcgSW1wcmVzc2lvblZpZXdhYmxlRXZlbnQoZXZlbnQpO1xuICAgIGNhc2UgJ3Jld2FyZGVkU2xvdENsb3NlZCc6XG4gICAgICByZXR1cm4gbmV3IFJld2FyZGVkU2xvdENsb3NlZEV2ZW50KGV2ZW50KTtcbiAgICBjYXNlICdyZXdhcmRlZFNsb3RHcmFudGVkJzpcbiAgICAgIHJldHVybiBuZXcgUmV3YXJkZWRTbG90R3JhbnRlZEV2ZW50KGV2ZW50KTtcbiAgICBjYXNlICdyZXdhcmRlZFNsb3RSZWFkeSc6XG4gICAgICByZXR1cm4gbmV3IFJld2FyZGVkU2xvdFJlYWR5RXZlbnQoZXZlbnQpO1xuICAgIGNhc2UgJ3Nsb3RSZXF1ZXN0ZWQnOlxuICAgICAgcmV0dXJuIG5ldyBTbG90UmVxdWVzdGVkRXZlbnQoZXZlbnQpO1xuICAgIGNhc2UgJ3Nsb3RSZXNwb25zZVJlY2VpdmVkJzpcbiAgICAgIHJldHVybiBuZXcgU2xvdFJlc3BvbnNlUmVjZWl2ZWQoZXZlbnQpO1xuICAgIGNhc2UgJ3Nsb3RSZW5kZXJFbmRlZCc6XG4gICAgICByZXR1cm4gbmV3IFNsb3RSZW5kZXJFbmRlZEV2ZW50KGV2ZW50KTtcbiAgICBjYXNlICdzbG90T25sb2FkJzpcbiAgICAgIHJldHVybiBuZXcgU2xvdE9ubG9hZEV2ZW50KGV2ZW50KTtcbiAgICBjYXNlICdzbG90VmlzaWJpbGl0eUNoYW5nZWQnOlxuICAgICAgcmV0dXJuIG5ldyBTbG90VmlzaWJpbGl0eUNoYW5nZWRFdmVudChldmVudCk7XG4gIH1cbn1cbiJdfQ==